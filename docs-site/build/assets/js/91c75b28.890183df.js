"use strict";(self.webpackChunkterrarium_documentation=self.webpackChunkterrarium_documentation||[]).push([[832],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>y});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,y=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(y,s(s({ref:t},c),{},{components:n})):r.createElement(y,s({ref:t},c))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},57189:(e,t,n)=>{n.d(t,{A:()=>C});var r=n(96540),a=n(58168),o=n(40870),s=n(23104),i=n(56347),l=n(57485),u=n(31682),c=n(89466);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.W6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[s,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[l,u]=y({queryString:n,groupId:a}),[p,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,c.Dv)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),h=(()=>{const e=l??p;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{h&&i(h)}),[h]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),g(e)}),[u,g,o]),tabValues:o}}var h=n(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:n,selectedValue:i,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,s.a_)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),r=u[n].value;r!==i&&(p(t),l(r))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},s,{className:(0,o.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":i===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function k(e){const t=g(e);return r.createElement("div",{className:(0,o.A)("tabs-container",f.tabList)},r.createElement(v,(0,a.A)({},e,t)),r.createElement(b,(0,a.A)({},e,t)))}function w(e){const t=(0,h.A)();return r.createElement(k,(0,a.A)({key:String(t)},e))}const T={tabItem:"tabItem_Ymn6"};function N(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.A)(T.tabItem,a),hidden:n},t)}const S={codeContainer:"codeContainer_lzJ3",copyButton:"copyButton_rH4I"},O={curl:"cURL",python:"Python",javascript:"JavaScript",typescript:"TypeScript",go:"Go",ruby:"Ruby"};function C(e){let{endpoint:t,method:n,params:a={},headers:o={}}=e;const[s,i]=(0,r.useState)("curl"),l={curl:(()=>{const e=Object.entries(o).map((e=>{let[t,n]=e;return`-H "${t}: ${n}"`})).join(" ");return`curl -X ${n.toUpperCase()} \\\n  ${e} \\\n  -d '${JSON.stringify(a)}' \\\n  "https://api.terrarium.dev/v1${t}"`})(),python:`import requests\n\nheaders = ${JSON.stringify(o,null,2)}\nparams = ${JSON.stringify(a,null,2)}\n\nresponse = requests.${n.toLowerCase()}(\n    'https://api.terrarium.dev/v1${t}',\n    headers=headers,\n    json=params\n)\n\nprint(response.json())`,javascript:`fetch('https://api.terrarium.dev/v1${t}', {\n  method: '${n.toUpperCase()}',\n  headers: ${JSON.stringify(o,null,2)},\n  body: JSON.stringify(${JSON.stringify(a,null,2)})\n})\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error('Error:', error));`,typescript:`interface RequestParams {\n  ${Object.entries(a).map((e=>{let[t,n]=e;return`${t}: ${typeof n};`})).join("\n  ")}\n}\n\ninterface ResponseData {\n  // Define your response type here\n  data: any;\n}\n\nasync function makeRequest(): Promise<ResponseData> {\n  const response = await fetch('https://api.terrarium.dev/v1${t}', {\n    method: '${n.toUpperCase()}',\n    headers: ${JSON.stringify(o,null,2)},\n    body: JSON.stringify(${JSON.stringify(a,null,2)})\n  });\n\n  if (!response.ok) {\n    throw new Error(\`HTTP error! status: \${response.status}\`);\n  }\n\n  return response.json();\n}\n\n// Usage\nmakeRequest()\n  .then(data => console.log(data))\n  .catch(error => console.error('Error:', error));`,go:`package main\n\nimport (\n    "bytes"\n    "encoding/json"\n    "fmt"\n    "io/ioutil"\n    "net/http"\n)\n\nfunc main() {\n    // Prepare request body\n    params := ${JSON.stringify(a,null,2)}\n    jsonData, err := json.Marshal(params)\n    if err != nil {\n        panic(err)\n    }\n\n    // Create request\n    req, err := http.NewRequest("${n.toUpperCase()}", "https://api.terrarium.dev/v1${t}", bytes.NewBuffer(jsonData))\n    if err != nil {\n        panic(err)\n    }\n\n    // Add headers\n    ${Object.entries(o).map((e=>{let[t,n]=e;return`req.Header.Add("${t}", "${n}")`})).join("\n    ")}\n\n    // Make request\n    client := &http.Client{}\n    resp, err := client.Do(req)\n    if err != nil {\n        panic(err)\n    }\n    defer resp.Body.Close()\n\n    // Read response\n    body, err := ioutil.ReadAll(resp.Body)\n    if err != nil {\n        panic(err)\n    }\n\n    fmt.Println(string(body))\n}`,ruby:`require 'net/http'\nrequire 'uri'\nrequire 'json'\n\nuri = URI('https://api.terrarium.dev/v1${t}')\nhttp = Net::HTTP.new(uri.host, uri.port)\nhttp.use_ssl = true\n\nrequest = Net::HTTP::${n.charAt(0).toUpperCase()+n.slice(1).toLowerCase()}.new(uri)\n${Object.entries(o).map((e=>{let[t,n]=e;return`request["${t}"] = "${n}"`})).join("\n")}\n\nrequest.body = ${JSON.stringify(a,null,2)}.to_json\n\nresponse = http.request(request)\nputs response.read_body`};return r.createElement("div",{className:S.codeContainer},r.createElement(w,{values:Object.entries(O).map((e=>{let[t,n]=e;return{label:n,value:t}})),defaultValue:"curl",onChange:e=>i(e)},Object.entries(l).map((e=>{let[t,n]=e;return r.createElement(N,{key:t,value:t},r.createElement("pre",null,r.createElement("code",{className:`language-${t}`},n)))}))))}},669:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=n(58168),a=(n(96540),n(15680)),o=n(57189);const s={sidebar_position:1},i="Authentication Overview",l={unversionedId:"api/auth/overview",id:"api/auth/overview",title:"Authentication Overview",description:"Terrarium uses JSON Web Tokens (JWT) for API authentication. This guide will walk you through the authentication process and best practices.",source:"@site/docs/api/auth/overview.md",sourceDirName:"api/auth",slug:"/api/auth/overview",permalink:"/docs/api/auth/overview",draft:!1,editUrl:"https://github.com/CharlesIXofFrance/terrarium/tree/main/docs-site/docs/api/auth/overview.md",tags:[],version:"current",lastUpdatedBy:"samgonzalez",lastUpdatedAt:1736899908,formattedLastUpdatedAt:"Jan 15, 2025",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"API Playground",permalink:"/docs/api/playground"},next:{title:"Managing Tokens",permalink:"/docs/api/auth/tokens"}},u={},c=[{value:"Authentication Flow",id:"authentication-flow",level:2},{value:"Token Types",id:"token-types",level:2},{value:"Access Token",id:"access-token",level:3},{value:"Refresh Token",id:"refresh-token",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"1. Register a New Account",id:"1-register-a-new-account",level:3},{value:"2. Login to Get Tokens",id:"2-login-to-get-tokens",level:3},{value:"3. Use Token in API Requests",id:"3-use-token-in-api-requests",level:3},{value:"Security Best Practices",id:"security-best-practices",level:2},{value:"1. Token Storage",id:"1-token-storage",level:3},{value:"2. Token Refresh",id:"2-token-refresh",level:3},{value:"3. Error Handling",id:"3-error-handling",level:3},{value:"Common Issues",id:"common-issues",level:2},{value:"Token Expiration",id:"token-expiration",level:3},{value:"Invalid Tokens",id:"invalid-tokens",level:3},{value:"CORS Issues",id:"cors-issues",level:3}],p={toc:c},d="wrapper";function m(e){let{components:t,...n}=e;return(0,a.yg)(d,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"authentication-overview"},"Authentication Overview"),(0,a.yg)("p",null,"Terrarium uses JSON Web Tokens (JWT) for API authentication. This guide will walk you through the authentication process and best practices."),(0,a.yg)("h2",{id:"authentication-flow"},"Authentication Flow"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"User Registration/Login")),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"User provides credentials"),(0,a.yg)("li",{parentName:"ul"},"Server validates credentials"),(0,a.yg)("li",{parentName:"ul"},"Server generates JWT token"),(0,a.yg)("li",{parentName:"ul"},"Client stores token securely"))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"API Requests")),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Client includes token in Authorization header"),(0,a.yg)("li",{parentName:"ul"},"Server validates token"),(0,a.yg)("li",{parentName:"ul"},"Server processes request if token is valid")))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-mermaid"},"sequenceDiagram\n    participant Client\n    participant Server\n    participant Database\n\n    Client->>Server: POST /auth/login\n    Server->>Database: Validate Credentials\n    Database--\x3e>Server: User Found\n    Server->>Server: Generate JWT\n    Server--\x3e>Client: Return JWT Token\n\n    Note over Client,Server: Subsequent API Requests\n\n    Client->>Server: API Request + JWT\n    Server->>Server: Validate JWT\n    Server--\x3e>Client: API Response\n")),(0,a.yg)("h2",{id:"token-types"},"Token Types"),(0,a.yg)("h3",{id:"access-token"},"Access Token"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Short-lived (1 hour)"),(0,a.yg)("li",{parentName:"ul"},"Used for API requests"),(0,a.yg)("li",{parentName:"ul"},"Contains user permissions")),(0,a.yg)("h3",{id:"refresh-token"},"Refresh Token"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Long-lived (30 days)"),(0,a.yg)("li",{parentName:"ul"},"Used to get new access tokens"),(0,a.yg)("li",{parentName:"ul"},"Stored securely in HTTP-only cookies")),(0,a.yg)("h2",{id:"getting-started"},"Getting Started"),(0,a.yg)("h3",{id:"1-register-a-new-account"},"1. Register a New Account"),(0,a.yg)(o.A,{endpoint:"/auth/register",method:"post",headers:{"Content-Type":"application/json"},params:{email:"user@example.com",password:"your-secure-password",name:"John Doe"},mdxType:"CodeSamples"}),(0,a.yg)("h3",{id:"2-login-to-get-tokens"},"2. Login to Get Tokens"),(0,a.yg)(o.A,{endpoint:"/auth/login",method:"post",headers:{"Content-Type":"application/json"},params:{email:"user@example.com",password:"your-secure-password"},mdxType:"CodeSamples"}),(0,a.yg)("h3",{id:"3-use-token-in-api-requests"},"3. Use Token in API Requests"),(0,a.yg)(o.A,{endpoint:"/communities",method:"get",headers:{Authorization:"Bearer YOUR_ACCESS_TOKEN","Content-Type":"application/json"},mdxType:"CodeSamples"}),(0,a.yg)("h2",{id:"security-best-practices"},"Security Best Practices"),(0,a.yg)("h3",{id:"1-token-storage"},"1. Token Storage"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Store access tokens in memory"),(0,a.yg)("li",{parentName:"ul"},"Store refresh tokens in HTTP-only cookies"),(0,a.yg)("li",{parentName:"ul"},"Never store tokens in localStorage or sessionStorage")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},"// \u274c Bad - Don't store in localStorage\nlocalStorage.setItem('token', 'your-token');\n\n// \u2705 Good - Store in memory\nlet token = 'your-token';\n")),(0,a.yg)("h3",{id:"2-token-refresh"},"2. Token Refresh"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Implement automatic token refresh"),(0,a.yg)("li",{parentName:"ul"},"Handle refresh token rotation"),(0,a.yg)("li",{parentName:"ul"},"Clear tokens on logout")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},"async function refreshToken() {\n  const response = await fetch('/auth/refresh', {\n    method: 'POST',\n    credentials: 'include', // Important for cookies\n  });\n\n  if (response.ok) {\n    const { accessToken } = await response.json();\n    return accessToken;\n  }\n\n  throw new Error('Refresh failed');\n}\n")),(0,a.yg)("h3",{id:"3-error-handling"},"3. Error Handling"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Handle 401 errors properly"),(0,a.yg)("li",{parentName:"ul"},"Implement retry with refresh"),(0,a.yg)("li",{parentName:"ul"},"Redirect to login when needed")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},"async function handleApiError(error) {\n  if (error.status === 401) {\n    try {\n      const newToken = await refreshToken();\n      // Retry original request with new token\n    } catch (refreshError) {\n      // Redirect to login\n      window.location.href = '/login';\n    }\n  }\n}\n")),(0,a.yg)("h2",{id:"common-issues"},"Common Issues"),(0,a.yg)("h3",{id:"token-expiration"},"Token Expiration"),(0,a.yg)("p",null,"If you receive a 401 error, your token might have expired. Use the refresh token endpoint to get a new access token:"),(0,a.yg)(o.A,{endpoint:"/auth/refresh",method:"post",headers:{"Content-Type":"application/json"},mdxType:"CodeSamples"}),(0,a.yg)("h3",{id:"invalid-tokens"},"Invalid Tokens"),(0,a.yg)("p",null,"Make sure you're including the token correctly in the Authorization header:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"Authorization: Bearer your-token-here\n")),(0,a.yg)("h3",{id:"cors-issues"},"CORS Issues"),(0,a.yg)("p",null,"For browser-based applications, ensure your server is configured to accept requests from your domain and handle preflight requests properly."))}m.isMDXComponent=!0}}]);